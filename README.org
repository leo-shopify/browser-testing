# Created 2017-07-03 Mon 14:34
#+OPTIONS: toc:nil
#+TITLE: Browser testing
#+AUTHOR: leonardo rojas
Sample setup for browser testing using testem.

-----

Versions used in the document:
- [[https://nodejs.org/en/][nodejs]]: =v8.1.3=
- [[https://www.npmjs.com/][npm]]: =5.0.4=

-----

1. Create an npm package:
   #+BEGIN_SRC sh
     npm init --yes
   #+END_SRC

2. Install packages as dev dependencies:
   #+BEGIN_SRC sh
     npm install --save-dev\
         tape testem rollup\
         rollup-plugin-node-resolve\
         rollup-plugin-commonjs\
         rollup-plugin-node-builtins\
         rollup-plugin-node-globals
   #+END_SRC

   - [[https://www.npmjs.com/package/tape][tape]] for testing.
   - [[https://www.npmjs.com/package/tape][testem]] to run tests in the browsers.
   - [[https://www.npmjs.com/package/rollup][rollup]] to convert es6 modules into scripts.

3. Create a =rollup.config.js= configuration file:
   #+BEGIN_SRC javascript
     import resolve from 'rollup-plugin-node-resolve';
     import commonjs from 'rollup-plugin-commonjs';
     import builtins from 'rollup-plugin-node-builtins';
     import globals from 'rollup-plugin-node-globals';
  
     export default {
       entry: 'tests.js',
       dest: 'bundle.js',
       moduleName: 'tests',
       format: 'iife',
       plugins: [
         resolve({jsnext: true, main: true}),
         commonjs(),
         globals(),
         builtins()
       ]
     };
   #+END_SRC

4. Add a build and test scripts to =package.json=:
   #+NAME: package-json-scripts
   #+BEGIN_SRC json
     {
       "build:tests": "rollup --config rollup.config.js",
       "testem": "testem",
       "test": "testem ci --parallel 3"
     }
   #+END_SRC
5. To see the list of available browsers, run:
   #+BEGIN_SRC sh
     npm run testem launchers
   #+END_SRC
   E.g.:

   | Launcher  | Type    | CI | Dev |
   |-----------+---------+----+-----|
   | Firefox   | browser | ✔  | ✔   |
   | Chrome    | browser | ✔  | ✔   |
   | Safari    | browser | ✔  | ✔   |
   | PhantomJS | browser | ✔  |     |

6. Create a =testem.json= configuration file:
   #+BEGIN_SRC json
     {
       "framework": "tap",
       "serve_files": ["bundle.js"],
       "before_tests": "npm run build:tests",
       "launch_in_dev": ["Firefox", "Chrome", "Safari"]
     }
   #+END_SRC
   =tap= is used as the framework since I'm using =tape= for testing, but Mocha
   and others are also available. See the [[https://github.com/testem/testem/blob/master/docs/config_file.md][configuration file docs]] for details.

7. Create a =tests.js= file with the tests:
   #+BEGIN_SRC javascript
     import {test} from 'tape';
  
     function hello(name){
       return 'hello ' + (name || 'world');
     }
  
     test('hello says hello', t => {
       t.equal(hello(), 'hello world', 'hello() should be "hello world"');
       t.end();
     });
  
     test('hello says hello to bob', t => {
       t.equal(hello('bob'), 'hello bob', 'hello(bob) should be "hello bob"');
       t.end();
     });
   #+END_SRC

8. Run the tests:
   - In TDD mode:
     #+BEGIN_SRC sh
       npm run testem
     #+END_SRC

     Sample output:
     #+BEGIN_EXAMPLE
     TEST'EM 'SCRIPTS!
     Open the URL below in a browser to connect.
     http://localhost:7357/
     ━━━━━━━━━━━━━━┓
         Firefox   ┃     Chrome         Safari
         2/2 ✔     ┃    2/2 ✔          2/2 ✔
                   ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


     ✔ 2 tests complete.
     [Press ENTER to run tests; q to quit; p to pause]
     #+END_EXAMPLE

   - In CI mode:
     #+BEGIN_SRC sh
       npm test
     #+END_SRC

     Sample output:
     #+BEGIN_EXAMPLE
     > testem ci --parallel 3

     ok 1 Chrome 59.0 - hello() should be "hello world"
     ok 2 Chrome 59.0 - hello(bob) should be "hello bob"
     ok 3 Safari 10.1 - hello() should be "hello world"
     ok 4 Safari 10.1 - hello(bob) should be "hello bob"
     ok 5 Safari 10.1 - hello() should be "hello world"
     ok 6 Safari 10.1 - hello(bob) should be "hello bob"
     ok 7 Firefox 54.0 - hello() should be "hello world"
     ok 8 Firefox 54.0 - hello(bob) should be "hello bob"

     1..8
     # tests 8
     # pass  8
     # skip  0
     # fail  0
     #+END_EXAMPLE
